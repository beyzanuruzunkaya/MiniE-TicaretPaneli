@* Views/Admin/AddCategory.cshtml *@
@model MiniE_TicaretPaneli.Models.ViewModels.AddCategoryViewModel

@{
    ViewData["Title"] = "Yeni Kategori Ekle";
}

<h1 class="mb-4">Yeni Kategori Ekle</h1>

<div class="alert alert-info">MainCategories: @string.Join(", ", Model.MainCategories.Select(x => x.Name))</div>

<div class="card shadow-sm p-4">
    <form asp-action="AddCategory" method="post">
        @Html.AntiForgeryToken() @* CSRF koruması için zorunludur *@
        <div asp-validation-summary="All" class="text-danger mb-3"></div> 

        <div class="mb-3">
            <label class="form-label" for="genderDropdown">Cinsiyet:</label>
            <select asp-for="Gender" class="form-select" id="genderDropdown" autocomplete="sex">
                <option value="">-- Cinsiyet Seçiniz --</option>
                <option value="Kadın">Kadın</option>
                <option value="Erkek">Erkek</option>
                <option value="Çocuk">Çocuk</option>
            </select>
            <span asp-validation-for="Gender" class="text-danger"></span>
        </div>

        <div class="mb-3">
            <label class="form-label">Eklemek İstediğiniz Kategori Seviyesi:</label><br />
            <div class="form-check form-check-inline">
                <input class="form-check-input" type="radio" name="CategoryLevelType" id="radioMainGroup" value="MainGroup"
                    @(Model.CategoryLevelType == "MainGroup" || string.IsNullOrEmpty(Model.CategoryLevelType) ? "checked" : "") />
                <label class="form-check-label" for="radioMainGroup">Ana Kategori Grubu (Örn: Giyim, Ayakkabı)</label>
            </div>
            <div class="form-check form-check-inline">
                <input class="form-check-input" type="radio" name="CategoryLevelType" id="radioProductType" value="ProductType"
                    @(Model.CategoryLevelType == "ProductType" ? "checked" : "") />
                <label class="form-check-label" for="radioProductType">Alt Kategori / Ürün Tipi (Örn: Tişört, Elbise)</label>
            </div>
            <span asp-validation-for="CategoryLevelType" class="text-danger d-block"></span>
        </div>

        <div class="mb-3" id="parentCategorySection" style="display:none;"> @* <<< Bu bölüm dinamik olarak gizlenecek/gösterilecek *@
            <label class="form-label" for="parentCategoryDropdown">Üst Kategori Seçiniz:</label>
            <select asp-for="ParentCategoryId" class="form-select" id="parentCategoryDropdown">
                <option value="">-- Üst Kategori Seçiniz --</option>
                @* Sadece ana kategoriler gösterilecek (isteğe bağlı olarak serverdan doldurulabilir) *@
                @foreach (var cat in Model.MainCategories)
                {
                    <option value="@cat.Id">@cat.Name</option>
                }
            </select>
            <span asp-validation-for="ParentCategoryId" class="text-danger"></span>
        </div>

        <div class="mb-3">
            <label asp-for="Name" class="form-label">Yeni Kategori Adı:</label>
            <input asp-for="Name" class="form-control" id="Name" autocomplete="off" />
            <span asp-validation-for="Name" class="text-danger"></span>
        </div>

        <hr />
        <div class="d-flex justify-content-between">
            <a asp-action="Categories" class="btn btn-secondary">Listeye Geri Dön</a>
            <button type="submit" class="btn btn-primary"><i class="fas fa-save me-2"></i>Kaydet</button>
        </div>
    </form>
</div>

@section Scripts {
    <script>
        document.addEventListener("DOMContentLoaded", function () {
            var $dropdown = document.getElementById('parentCategoryDropdown');
            if (!$dropdown) return;

            fetch('/Admin/Category/GetRootCategories')
                .then(response => response.json())
                .then(data => {
                    console.log("Gelen ana kategoriler:", data);
                    $dropdown.innerHTML = '';
                    var defaultOption = document.createElement('option');
                    defaultOption.value = '';
                    defaultOption.text = '-- Üst Kategori Seçiniz --';
                    $dropdown.appendChild(defaultOption);
                    data.forEach(function (cat) {
                        var option = document.createElement('option');
                        option.value = cat.id;
                        option.text = cat.name;
                        $dropdown.appendChild(option);
                    });
                    console.log("Dropdown'a eklenen option sayısı:", $dropdown.options.length);
                })
                .catch(error => console.error("AJAX hata:", error));
        });
    </script>
    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
    <script src="~/js/site.js"></script>
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
    <script>
        $(document).ready(function () {
            console.log("jQuery çalışıyor!");
            var categoryLevelRadios = $('input[name="CategoryLevelType"]');
            var parentCategorySection = $('#parentCategorySection');

            function toggleParentCategorySection() {
                var selectedLevel = $('input[name="CategoryLevelType"]:checked').val();
                console.log("toggleParentCategorySection çağrıldı, seçili:", selectedLevel);
                if (selectedLevel === "ProductType") {
                    parentCategorySection.css('display', 'block');
                } else {
                    parentCategorySection.css('display', 'none');
                    $('#parentCategoryDropdown').val('');
                }
            }

            // Olayı hem change hem click ile bağla
            categoryLevelRadios.on('change click', function() {
                console.log("Radio değişti:", $(this).val());
                toggleParentCategorySection();
            });

            // Sayfa yüklendiğinde de kontrol et
            setTimeout(toggleParentCategorySection, 0);
        });
    </script>
}